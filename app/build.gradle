apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.lyric.android.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 133
        versionName "1.3.3"

        // dex突破65535的限制
        multiDexEnabled true

        manifestPlaceholders = [APP_CHANNEL_VALUE: "common"]
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"

            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            def isDefaultOutput = true;
            if (isDefaultOutput) {
                // 默认
            } else {
                applicationVariants.all { variant ->
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            // 输出apk名称为AndroidUtils_v1.3.2_2017-09-01_common.apk
                            def fileName = "AndroidUtils_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                            output.outputFile = new File(outputFile.parent, fileName)
                        }
                    }
                }
            }
        }
    }

    // 多渠道打包
    productFlavors {
        common {}
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [APP_CHANNEL_VALUE: name]
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dexOptions {
        preDexLibraries false
        javaMaxHeapSize "4g"
    }

    useLibrary 'org.apache.http.legacy'
}

def static releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

def supportVersion = '26.1.0'

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'

    compile 'com.android.support:cardview-v7:' + supportVersion
    compile 'com.android.support:design:' + supportVersion
    compile 'com.android.support:support-v4:' + supportVersion
    compile 'com.android.support:appcompat-v7:' + supportVersion
    compile 'com.android.support:recyclerview-v7:' + supportVersion

    compile 'com.github.bumptech.glide:glide:4.3.1'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.3.1'

    compile 'com.google.code.gson:gson:2.8.2'
    compile 'org.greenrobot:eventbus:3.1.1'

    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'

    compile 'com.google.zxing:core:3.3.1'
    compile 'com.nineoldandroids:library:2.4.0'
}
